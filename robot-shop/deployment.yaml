apiVersion: v1
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: cart
    name: cart
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: cart
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: cart
      spec:
        containers:
        - env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: image-registry.openshift-image-registry.svc:5000/robot-shop/cart:latest
          imagePullPolicy: IfNotPresent
          name: cart
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: catalogue
    name: catalogue
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: catalogue
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: catalogue
      spec:
        containers:
        - env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: image-registry.openshift-image-registry.svc:5000/robot-shop/catalogue:latest
          imagePullPolicy: IfNotPresent
          name: catalogue
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: dispatch
    name: dispatch
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: dispatch
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: dispatch
      spec:
        containers:
        - env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: image-registry.openshift-image-registry.svc:5000/robot-shop/dispatch:latest
          imagePullPolicy: IfNotPresent
          name: dispatch
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: mongodb
    name: mongodb
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: mongodb
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: mongodb
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/robot-shop/mongo:latest
          imagePullPolicy: IfNotPresent
          name: mongodb
          ports:
          - containerPort: 27017
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: mysql
    name: mysql
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: mysql
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: mysql
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/robot-shop/mysql:latest
          imagePullPolicy: IfNotPresent
          name: mysql
          ports:
          - containerPort: 3306
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 700Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: payment
      stage: prod
    name: payment
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: payment
        stage: prod
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: payment
          stage: prod
      spec:
        containers:
        - env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: image-registry.openshift-image-registry.svc:5000/robot-shop/payment:latest
          imagePullPolicy: IfNotPresent
          name: payment
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: rabbitmq
    name: rabbitmq
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: rabbitmq
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: rabbitmq
      spec:
        containers:
        - image: rabbitmq:3.7-management-alpine
          imagePullPolicy: IfNotPresent
          name: rabbitmq
          ports:
          - containerPort: 5672
            protocol: TCP
          - containerPort: 15672
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: ratings
    name: ratings
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: ratings
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: ratings
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/robot-shop/ratings:latest
          imagePullPolicy: IfNotPresent
          name: ratings
          ports:
          - containerPort: 80
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /_health
              port: 80
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: shipping
    name: shipping
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: shipping
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: shipping
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/robot-shop/shipping:latest
          imagePullPolicy: IfNotPresent
          name: shipping
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 200m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 500Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: user
    name: user
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: user
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: user
      spec:
        containers:
        - env:
          - name: INSTANA_AGENT_HOST
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: image-registry.openshift-image-registry.svc:5000/robot-shop/user:latest
          imagePullPolicy: IfNotPresent
          name: user
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      service: web
    name: web
    namespace: robot-shop
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        service: web
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          service: web
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/robot-shop/web:latest
          imagePullPolicy: IfNotPresent
          name: web
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
